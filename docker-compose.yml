version: "3"
services:
  db:
    restart: unless-stopped
    image: postgres:12
    volumes:
      - pg-vol:/var/lib/postgresql/data/
      - ./backend/dbbackup:/dbbackup/
    env_file:
      - ./backend/pg_settings.env
  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/app/backend
      - static-vol:/app/backend/staticfiles/
    stdin_open: true
    tty: true
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    #ports:
    #  - 8000:8000
    expose:
      - 8000
    environment:
      MYSQL_HOST: host.docker.internal
    depends_on:
      - db
  nginx:
    restart: unless-stopped
    build: ./nginx
    volumes:
      - static-vol:/app/backend/staticfiles/
      - ./data/certbot/conf:/etc/letsencrypt/
      - ./data/certbot/www:/var/www/certbot/
    ports:
      - 1337:80
      - 443:443
    depends_on:
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" 
  certbot:
    restart: unless-stopped
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt/
      - ./data/certbot/www:/var/www/certbot/
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  pg-vol:
  static-vol:
